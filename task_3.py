"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

company = {'Beeline': 4000000, 'Mega': 5000000, 'Mts': 7000000, 'Iota': 3000000, 'Tele2': 1000000}

# Средний и лаконичный способ выполнения задачи.

# Сложность: O(n ** 2)


number_one = company.copy()
for i in range(3):
    profit = max(number_one.values())
    firm = ''.join(([i for i in number_one if number_one[i] == profit]))
    print(f'{firm}: {profit}')
    del number_one[firm]

    ################################################################################################################

# Быстрый и лаконичный способ выполнения задачи.


# Сложность: O(n * log * n)


number_tree = company.copy()
profit = list(number_tree.items())
profit.sort(key=lambda b: b[1])
profit.reverse()
for i in profit[:3]:
    print(f'{i[0]}: {i[1]}')
